// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+shift+oem_102",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "shift+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+backspace",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+y down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+y up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.worktrees.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.worktrees/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.branches.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.commits.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.contributors.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.drafts.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.drafts/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.fileHistory.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.lineHistory.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.remotes.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.repositories.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.searchAndCompare.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.stashes.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.tags.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.workspaces.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.workspaces/"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.selectandstart",
    "when": "!inDebugMode"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocusInAny"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorFocus || inSettingsEditor || inKeybindings"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "f2",
    "command": "workbench.action.terminal.renameWithArg",
    "when": "terminalFocusInAny"
  },
  {
    "key": "f2",
    "command": "workbench.action.terminal.renameActiveTab",
    "when": "terminalFocusInAny"
  },
  {
    "key": "f2",
    "command": "-workbench.action.terminal.renameActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "key": "ctrl+f2",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocusInAny"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+k ctrl+shift+s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "shift+alt+right",
    "command": "workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.terminal.unsplit",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+k right",
    "command": "workbench.action.splitEditorRight",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+k up",
    "command": "workbench.action.splitEditorUp",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorUp"
  },{
    "key": "ctrl+shift+-",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "editorTextFocus"
  },{
    "key": "ctrl+shift+oem_period",
    "command": "workbench.action.moveEditorToPreviousGroup",
  },
  {
    "key": "ctrl+k left",
    "command": "workbench.action.splitEditorLeft",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+k down",
    "command": "workbench.action.splitEditorDown",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus || (editorTabsVisible && !terminalFocusInAny)"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.navigateEditorGroups",
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "scrollLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "scrollRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+pageup",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+up",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+pageup",
    "command": "-workbench.action.terminal.scrollUp",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+pagedown",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+pagedown",
    "command": "-workbench.action.terminal.scrollDown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  }
]
